// Generated by CoffeeScript 1.4.0
(function() {
  var Processor, assert, logger, thrift, ttypes;

  ttypes = require('./social_coffee_service_types');

  Processor = require('./SocialCoffeeService');

  assert = require('assert');

  thrift = require('node-thrift');

  logger = require('winston');

  SocialCoffee.Thrift.Client = (function() {

    function Client() {}

    Client.connection = null;

    Client.client = null;

    Client.connect = function(host, port) {
      var thrift_options;
      assert(host && typeof host === 'string', 'host parameter is invalid or missing');
      assert(port && typeof port === 'number', 'port number is invalid or missing');
      thrift_options = {
        transport: thrift.TFramedTransport,
        protocol: thrift.TBinaryProtocol,
        debug: true,
        max_attempts: 2,
        connect_timeout: 2000
      };
      this.connection = thrift.createConnection(host, port, thrift_options);
      this.connection.on('error', function(error) {
        return logger.error("Error occurred during commmunication with thrift server", {
          error: error.toString()
        });
      });
      this.client = thrift.createClient(Processor, this.connection);
      return this.client;
    };

    Client.close = function() {
      if (this.connection) {
        return this.connection.emit('close');
      }
    };

    return Client;

  })();

  exports.Client = SocialCoffee.Thrift.Client;

}).call(this);
